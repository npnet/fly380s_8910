/* Copyright (C) 2018 RDA Technologies Limited and/or its affiliates("RDA").
 * All rights reserved.
 *
 * This software is supplied "AS IS" without any warranties.
 * RDA assumes no responsibility or liability for the use of the software,
 * conveys no license or title under any patent, copyright, or mask work
 * right to the product. RDA reserves the right to make changes in the
 * software without notification.  RDA also make no representation or
 * warranty that such application will be suitable for the specified use
 * without further testing or modification.
 */

#ifndef _INCLUDE_GUICTELCOM_API_H_
#define _INCLUDE_GUICTELCOM_API_H_

#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>
#include "lv_include/lv_poc_lib.h"

OSI_EXTERN_C_BEGIN
;

#define UT_STATUS_OFFLINE   0       //离线
#define UT_STATUS_ONLINE    1       //在线

typedef enum
{
	LVPOCGUICTELCOM_SIGNAL_START = (1 << 8) - 1,//255

    LVPOCGUICTELCOM_SIGNAL_LOGIN_IND,
    LVPOCGUICTELCOM_SIGNAL_LOGIN_REP,

    LVPOCGUICTELCOM_SIGNAL_EXIT_IND,
    LVPOCGUICTELCOM_SIGNAL_EXIT_REP,

    LVPOCGUICTELCOM_SIGNAL_SPEAK_START_IND,
    LVPOCGUICTELCOM_SIGNAL_SPEAK_START_REP,

    LVPOCGUICTELCOM_SIGNAL_SPEAK_STOP_IND,
    LVPOCGUICTELCOM_SIGNAL_SPEAK_STOP_REP,//263

    LVPOCGUICTELCOM_SIGNAL_MIC_IND,
    LVPOCGUICTELCOM_SIGNAL_MIC_REP,

    LVPOCGUICTELCOM_SIGNAL_GROUP_LIST_QUERY_IND,
    LVPOCGUICTELCOM_SIGNAL_GROUP_LIST_QUERY_REP,
    LVPOCGUICTELCOM_SIGNAL_REGISTER_GET_GROUP_LIST_CB_IND,
    LVPOCGUICTELCOM_SIGNAL_CANCEL_REGISTER_GET_GROUP_LIST_CB_IND,//269

    LVPOCGUICTELCOM_SIGNAL_BIUILD_GROUP_IND,
    LVPOCGUICTELCOM_SIGNAL_BIUILD_GROUP_REP,
    LVPOCGUICTELCOM_SIGNAL_ENTER_TEMPORATY_GROUP_REP,
    LVPOCGUICTELCOM_SIGNAL_EXIT_TEMPORATY_GROUP_REP,
    LVPOCGUICTELCOM_SIGNAL_REGISTER_BIUILD_GROUP_CB_IND,
    LVPOCGUICTELCOM_SIGNAL_CANCEL_REGISTER_BIUILD_GROUP_CB_IND,//273

    LVPOCGUICTELCOM_SIGNAL_MEMBER_LIST_QUERY_IND,//274
    LVPOCGUICTELCOM_SIGNAL_MEMBER_LIST_QUERY_REP,//275
    LVPOCGUICTELCOM_SIGNAL_REGISTER_GET_MEMBER_LIST_CB_IND,//276
    LVPOCGUICTELCOM_SIGNAL_CANCEL_REGISTER_GET_MEMBER_LIST_CB_IND,//277

    LVPOCGUICTELCOM_SIGNAL_JOIN_GROUP_QUERY_GROUPMEMBER_REP,
    LVPOCGUICTELCOM_SIGNAL_EXIT_GROUP_QUERY_GROUPMEMBER_REP,//279

    LVPOCGUICTELCOM_SIGNAL_SET_CURRENT_GROUP_IND,//280
    LVPOCGUICTELCOM_SIGNAL_REGISTER_SET_CURRENT_GROUP_CB_IND,//281
    LVPOCGUICTELCOM_SIGNAL_CANCEL_REGISTER_SET_CURRENT_GROUP_CB_IND,

    LVPOCGUICTELCOM_SIGNAL_MEMBER_INFO_IND,
    LVPOCGUICTELCOM_SIGNAL_MEMBER_INFO_REP,

    LVPOCGUICTELCOM_SIGNAL_MEMBER_STATUS_REP,
    LVPOCGUICTELCOM_SIGNAL_REGISTER_MEMBER_STATUS_CB_REP,
    LVPOCGUICTELCOM_SIGNAL_CANCEL_REGISTER_MEMBER_STATUS_CB_REP,

    LVPOCGUICTELCOM_SIGNAL_STOP_PLAY_IND,
    LVPOCGUICTELCOM_SIGNAL_START_PLAY_IND,

    LVPOCGUICTELCOM_SIGNAL_STOP_RECORD_IND,
    LVPOCGUICTELCOM_SIGNAL_START_RECORD_IND,
    LVPOCGUICTELCOM_SIGNAL_SEND_RECORD_DATA_IND,

    LVPOCGUICTELCOM_SIGNAL_SINGLE_CALL_STATUS_IND,
    LVPOCGUICTELCOM_SIGNAL_SINGLE_CALL_STATUS_OK_REP,
    LVPOCGUICTELCOM_SIGNAL_SINGLE_CALL_STATUS_EXIT_REP,
	LVPOCGUICTELCOM_SIGNAL_EXIT_SINGLE_JOIN_CURRENT_GROUP,

	LVPOCGUICTELCOM_SIGNAL_BE_MEMBER_CALL_REP,

    LVPOCGUICTELCOM_SIGNAL_LISTEN_START_REP,
    LVPOCGUICTELCOM_SIGNAL_LISTEN_STOP_REP,
    LVPOCGUICTELCOM_SIGNAL_LISTEN_SPEAKER_REP,

    LVPOCGUICTELCOM_SIGNAL_GU_STATUS_REP,

    LVPOCGUICTELCOM_SIGNAL_GROUP_OPERATOR_REP,

    LVPOCGUICTELCOM_SIGNAL_RELEASE_LISTEN_TIMER_REP,

    LVPOCGUICTELCOM_SIGNAL_DELAY_IND,

    LVPOCGUICTELCOM_SIGNAL_GET_MEMBER_LIST_CUR_GROUP,

    LVPOCGUICTELCOM_SIGNAL_GET_GROUP_LIST_INCLUDE_SELF,

    LVPOCGUICTELCOM_SIGNAL_START_QUERY_SELF_MEMBERLIST_IND,
    LVPOCGUICTELCOM_SIGNAL_STOP_QUERY_SELF_MEMBERLIST_IND,

    LVPOCGUICTELCOM_SIGNAL_LOCK_GROUP_IND,
    LVPOCGUICTELCOM_SIGNAL_LOCK_GROUP_REP,

    LVPOCGUICTELCOM_SIGNAL_UNLOCK_GROUP_IND,
    LVPOCGUICTELCOM_SIGNAL_UNLOCK_GROUP_REP,

    LVPOCGUICTELCOM_SIGNAL_DELETE_GROUP_IND,
    LVPOCGUICTELCOM_SIGNAL_DELETE_GROUP_REP,
	LVPOCGUICTELCOM_SIGNAL_UNLOCK_BE_DELETED_LOCK_GROUP_IND,
    LVPOCGUICTELCOM_SIGNAL_UNLOCK_BE_DELETED_LOCK_GROUP_REP,

	LVPOCGUICTELCOM_SIGNAL_GET_SPEAK_CALL_CASE,
	LVPOCGUICTELCOM_SIGNAL_SET_SHUTDOWN_POC,

	LVPOCGUICTELCOM_SIGNAL_GPS_UPLOADING_IND,

	LVPOCGUICTELCOM_SIGNAL_SUSPEND_IND,
	LVPOCGUICTELCOM_SIGNAL_RESUME_IND,

	LVPOCGUICTELCOM_SIGNAL_PLAY_TONE_START_SPEAK,
	LVPOCGUICTELCOM_SIGNAL_PLAY_TONE_STOP_SPEAK,
	LVPOCGUICTELCOM_SIGNAL_PLAY_TONE_START_LISTEN,
	LVPOCGUICTELCOM_SIGNAL_PLAY_TONE_STOP_LISTEN,

    LVPOCGUICTELCOM_SIGNAL_SERVER_CHANGED_IND,

	LVPOCGUICTELCOM_SIGNAL_CALL_BRIGHT_SCREEN_ENTER,
	LVPOCGUICTELCOM_SIGNAL_CALL_BRIGHT_SCREEN_EXIT,
	LVPOCGUICTELCOM_SIGNAL_CALL_BRIGHT_SCREEN_BREAK,

	LVPOCGUICTELCOM_SIGNAL_STOP_TIMEOUT_CHECK_ACK_IND,

	LVPOCGUICTELCOM_SIGNAL_VOICE_PLAY_START_IND,
	LVPOCGUICTELCOM_SIGNAL_VOICE_PLAY_STOP_IND,

    LVPOCGUICTELCOM_SIGNAL_END,
} LvPocGuiCtelCom_SignalType_t;

typedef enum{//登录状态

	LVPOCCTELCOM_SIGNAL_LOGIN_START = 0,

	LVPOCCTELCOM_SIGNAL_LOGIN_FAILED = 1 ,
	LVPOCCTELCOM_SIGNAL_LOGIN_ING = 2 ,
	LVPOCCTELCOM_SIGNAL_LOGIN_SUCCESS = 3 ,
	LVPOCCTELCOM_SIGNAL_LOGIN_EXIT = 4 ,

	LVPOCCTELCOM_SIGNAL_LOGIN_END	,
}LVPOCCTELCOM_LOGIN_STATUS_T;

typedef enum{//组状态

	LVPOCGROUPCTELCOM_SIGNAL_SELF_START = 0,

	LVPOCGROUPCTELCOM_SIGNAL_SELF_NO    = 1 ,
	LVPOCGROUPCTELCOM_SIGNAL_SELF_EXIST = 2 ,

	LVPOCGROUPCTELCOM_SIGNAL_SELF_END,
}LVPOCCTELCOM_SELFGROUP_STATUS_T;

typedef enum{

	LVPOCCTELCOM_CALL_TYPE_START = 0,

	LVPOCCTELCOM_CALL_TYPE_SINGLE = 1 ,
	LVPOCCTELCOM_CALL_TYPE_GROUP = 2 ,

	LVPOCOEMCOM_CALL_TYPE_END	,
}LVPOCOEMCOM_CALL_TYPE_T;

enum{
    LVPOCBNDCOM_CALL_DIR_TYPE_ENTER = 1 ,
    LVPOCBNDCOM_CALL_DIR_TYPE_SPEAK = 2 ,
    LVPOCBNDCOM_CALL_DIR_TYPE_LISTEN = 3 ,
};

enum{
    LVPOCBNDCOM_CALL_LASTSCR_STATE_START = 1 ,
    LVPOCBNDCOM_CALL_LASTSCR_STATE_OPEN  = 2 ,
    LVPOCBNDCOM_CALL_LASTSCR_STATE_CLOSE = 3 ,
};

typedef struct
{
	int status;
	unsigned short cause;
} LvPocGuiCtelCom_login_t;

typedef struct
{
	int opt;
	void *group_info;
	void (*cb)(lv_poc_group_oprator_type opt);
} LvPocGuiCtelCom_lock_group_t;

typedef struct
{
	void *group_info;
	void (*cb)(int result_type);
} LvPocGuiCtelCom_delete_group_t;

void lvPocGuiCtelCom_Init(void);

bool lvPocGuiCtelCom_Msg(LvPocGuiCtelCom_SignalType_t signal, void * ctx);

void lvPocGuiCtelCom_log(void);

int lvPocGuiCtelCom_get_status(void);

void *lvPocGuiCtelCom_get_self_info(void);

void *lvPocGuiCtelCom_get_current_group_info(void);

bool lvPocGuiCtelCom_get_speak_status(void);

bool lvPocGuiCtelCom_get_listen_status(void);

void *lvPocGuiCtelCom_get_current_lock_group(void);

int lvPocGuiCtelCom_get_current_exist_selfgroup(void);

int lv_poc_ctel_unicode_to_utf8_convert(char *pUserInput, unsigned char *pUserOutput);

void lv_poc_serverinfo_to_ipport(char *serverinfo, char *ip, int *port);

void lvPocGuiComLogSwitch(bool status);

lv_poc_cit_status_type lvPocGuiComCitStatus(lv_poc_cit_status_type status);

OSI_EXTERN_C_END

#endif
