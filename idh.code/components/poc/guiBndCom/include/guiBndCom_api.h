/* Copyright (C) 2018 RDA Technologies Limited and/or its affiliates("RDA").
 * All rights reserved.
 *
 * This software is supplied "AS IS" without any warranties.
 * RDA assumes no responsibility or liability for the use of the software,
 * conveys no license or title under any patent, copyright, or mask work
 * right to the product. RDA reserves the right to make changes in the
 * software without notification.  RDA also make no representation or
 * warranty that such application will be suitable for the specified use
 * without further testing or modification.
 */

#ifndef _INCLUDE_GUIIDTCOM_API_H_
#define _INCLUDE_GUIIDTCOM_API_H_

#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>

OSI_EXTERN_C_BEGIN
;

typedef enum
{
	LVPOCGUIBNDCOM_SIGNAL_START = (1 << 8) - 1,

    LVPOCGUIBNDCOM_SIGNAL_LOGIN_IND,
    LVPOCGUIBNDCOM_SIGNAL_LOGIN_REP,

    LVPOCGUIBNDCOM_SIGNAL_EXIT_IND,
    LVPOCGUIBNDCOM_SIGNAL_EXIT_REP,

    LVPOCGUIBNDCOM_SIGNAL_SPEAK_START_IND,
    LVPOCGUIBNDCOM_SIGNAL_SPEAK_START_REP,
    LVPOCGUIBNDCOM_SIGNAL_SPEAK_STOP_IND,
    LVPOCGUIBNDCOM_SIGNAL_SPEAK_STOP_REP,
    LVPOCGUIBNDCOM_SIGNAL_SPEAK_TONE_START_IND,
    LVPOCGUIBNDCOM_SIGNAL_SPEAK_TONE_STOP_IND,

    LVPOCGUIBNDCOM_SIGNAL_GROUP_LIST_QUERY_IND,
    LVPOCGUIBNDCOM_SIGNAL_GROUP_LIST_QUERY_REP,
    LVPOCGUIBNDCOM_SIGNAL_REGISTER_GET_GROUP_LIST_CB_IND,
    LVPOCGUIBNDCOM_SIGNAL_CANCEL_REGISTER_GET_GROUP_LIST_CB_IND,
    LVPOCGUIBNDCOM_SIGNAL_STOP_GROUP_REFR_REP,

    LVPOCGUIBNDCOM_SIGNAL_MEMBER_LIST_QUERY_IND,
    LVPOCGUIBNDCOM_SIGNAL_MEMBER_LIST_QUERY_REP,
    LVPOCGUIBNDCOM_SIGNAL_REGISTER_GET_MEMBER_LIST_CB_IND,
    LVPOCGUIBNDCOM_SIGNAL_CANCEL_REGISTER_GET_MEMBER_LIST_CB_IND,
	LVPOCGUIBNDCOM_SIGNAL_MEMBER_LIST_QUERY_REFRESH_REP,

    LVPOCGUIBNDCOM_SIGNAL_SET_CURRENT_GROUP_IND,
    LVPOCGUIBNDCOM_SIGNAL_REGISTER_SET_CURRENT_GROUP_CB_IND,
    LVPOCGUIBNDCOM_SIGNAL_CANCEL_REGISTER_SET_CURRENT_GROUP_CB_IND,

	LVPOCGUIBNDCOM_SIGNAL_BIUILD_TEMPGRP_IND,
	LVPOCGUIBNDCOM_SIGNAL_BIUILD_TEMPGRP_REP,
	LVPOCGUIBNDCOM_SIGNAL_BIUILD_TEMPGRP_GET_MEMBER_REP,
	LVPOCGUIBNDCOM_SIGNAL_BIUILD_TEMPGRP_EXIT_REP,
	LVPOCGUIBNDCOM_SIGNAL_REGISTER_BIUILD_TEMPGRP_CB_IND,
	LVPOCGUIBNDCOM_SIGNAL_CANCEL_REGISTER_BIUILD_TEMPGRP_CB_IND,

    LVPOCGUIBNDCOM_SIGNAL_MEMBER_INFO_IND,
    LVPOCGUIBNDCOM_SIGNAL_MEMBER_INFO_REP,

    LVPOCGUIBNDCOM_SIGNAL_MEMBER_STATUS_REP,
    LVPOCGUIBNDCOM_SIGNAL_REGISTER_MEMBER_STATUS_CB_REP,
    LVPOCGUIBNDCOM_SIGNAL_CANCEL_REGISTER_MEMBER_STATUS_CB_REP,

    LVPOCGUIBNDCOM_SIGNAL_STOP_PLAY_IND,
    LVPOCGUIBNDCOM_SIGNAL_START_PLAY_IND,

    LVPOCGUIBNDCOM_SIGNAL_STOP_RECORD_IND,
    LVPOCGUIBNDCOM_SIGNAL_START_RECORD_IND,
    LVPOCGUIBNDCOM_SIGNAL_SEND_RECORD_DATA_IND,

    LVPOCGUIBNDCOM_SIGNAL_SINGLE_CALL_STATUS_IND,
    LVPOCGUIBNDCOM_SIGNAL_SINGLE_CALL_STATUS_OK_REP,
    LVPOCGUIBNDCOM_SIGNAL_SINGLE_CALL_STATUS_EXIT_REP,
    LVPOCGUIBNDCOM_SIGNAL_SINGLE_CALL_STATUS_GET_MEMBER_CALL_IND,
    LVPOCGUIBNDCOM_SIGNAL_SINGLE_CALL_STATUS_SELECT_CALL_MODE,
    LVPOCGUIBNDCOM_SIGNAL_SINGLE_CALL_STATUS_REGET_INFO_IND,
    LVPOCGUIBNDCOM_SIGNAL_EXIT_SINGLE_JOIN_CURRENT_GROUP,

    LVPOCGUIBNDCOM_SIGNAL_LISTEN_START_REP,
    LVPOCGUIBNDCOM_SIGNAL_LISTEN_STOP_REP,
    LVPOCGUIBNDCOM_SIGNAL_LISTEN_SPEAKER_REP,

    LVPOCGUIBNDCOM_SIGNAL_GU_STATUS_REP,

    LVPOCGUIBNDCOM_SIGNAL_DELAY_IND,

    LVPOCGUIBNDCOM_SIGNAL_SCREEN_ON_IND,
    LVPOCGUIBNDCOM_SIGNAL_SCREEN_OFF_IND,

	LVPOCGUIBNDCOM_SIGNAL_GET_ERROR_CASE,
	LVPOCGUIBNDCOM_SIGNAL_SET_SHUTDOWN_POC,

	LVPOCGUIBNDCOM_SIGNAL_GPS_UPLOADING_IND,

	LVPOCGUIBNDCOM_SIGNAL_SUSPEND_IND,
	LVPOCGUIBNDCOM_SIGNAL_RESUME_IND,

	LVPOCGUIBNDCOM_SIGNAL_PLAY_TONE_START_SPEAK,
	LVPOCGUIBNDCOM_SIGNAL_PLAY_TONE_STOP_SPEAK,
	LVPOCGUIBNDCOM_SIGNAL_PLAY_TONE_START_LISTEN,
	LVPOCGUIBNDCOM_SIGNAL_PLAY_TONE_STOP_LISTEN,

	LVPOCGUIBNDCOM_SIGNAL_VOICE_VOLUM_IND,
	LVPOCGUIBNDCOM_SIGNAL_TTS_VOLUM_IND,
	LVPOCGUIBNDCOM_SIGNAL_TONE_VOLUM_IND,
	//ADD
	LVPOCGUIBNDCOM_SIGNAL_STOP_TIMEOUT_CHECK_ACK_IND,

	LVPOCGUIBNDCOM_SIGNAL_CALL_BRIGHT_SCREEN_BREAK,

	LVPOCGUIBNDCOM_SIGNAL_VOICE_PLAY_START_IND,
	LVPOCGUIBNDCOM_SIGNAL_VOICE_PLAY_STOP_IND,

	LVPOCGUIBNDCOM_SIGNAL_SETPOC_IND,

	LVPOCGUIBNDCOM_SIGNAL_SET_START_PLAYER_TTS_VOICE,
	LVPOCGUIBNDCOM_SIGNAL_SET_STOP_PLAYER_TTS_VOICE,

	LVPOCGUIBNDCOM_SIGNAL_PING_TIME_IND,

    LVPOCGUIBNDCOM_SIGNAL_END,
} LvPocGuiIdtCom_SignalType_t;

typedef enum{

	LVPOCBNDCOM_SIGNAL_LOGIN_START = 0,

	LVPOCBNDCOM_SIGNAL_LOGIN_FAILED = 1 ,
	LVPOCBNDCOM_SIGNAL_LOGIN_ING = 2 ,
	LVPOCBNDCOM_SIGNAL_LOGIN_SUCCESS = 3 ,
	LVPOCBNDCOM_SIGNAL_LOGIN_EXIT = 4 ,

	LVPOCBNDCOM_SIGNAL_LOGIN_END	,
}LVPOCIDTCOM_LOGIN_STATUS_T;

typedef enum{

	LVPOCGROUPIDTCOM_SIGNAL_SELF_START = 0,

	LVPOCGROUPIDTCOM_SIGNAL_SELF_NO    = 1 ,
	LVPOCGROUPIDTCOM_SIGNAL_SELF_EXIST = 2 ,

	LVPOCGROUPIDTCOM_SIGNAL_SELF_END,
}LVPOCIDTCOM_SELFGROUP_STATUS_T;

enum{
 	USER_OPRATOR_SIGNAL_CALL = 1,
 	USER_OPRATOR_MULTI_CALL  = 2,
};

enum{
 	ERROR_TYPE_START = 0,
 	ERROR_TYPE_SINGLE_OR_MULTI_CALL = 1,
 	ERROR_TYPE_MEMBER_REFRESH  = 2,
};

typedef struct
{
	int opt;
	void *group_info;
	void (*cb)(lv_poc_group_oprator_type opt);
} LvPocGuiIdtCom_lock_group_t;

typedef struct
{
	void *group_info;
	void (*cb)(int result_type);
} LvPocGuiIdtCom_delete_group_t;

void lvPocGuiBndCom_Init(void);

bool lvPocGuiBndCom_Msg(LvPocGuiIdtCom_SignalType_t signal, void * ctx);

void lvPocGuiBndCom_log(void);

int lvPocGuiBndCom_get_status(void);

void *lvPocGuiBndCom_get_self_info(void);

void *lvPocGuiBndCom_get_current_group_info(void);

bool lvPocGuiBndCom_get_speak_status(void);

bool lvPocGuiBndCom_get_listen_status(void);

void *lvPocGuiBndCom_get_current_lock_group(void);

lv_poc_tmpgrp_t lvPocGuiBndCom_cit_status(lv_poc_tmpgrp_t status);

OSI_EXTERN_C_END

#endif
