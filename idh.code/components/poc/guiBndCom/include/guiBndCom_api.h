#ifndef _INCLUDE_GUIBNDCOM_API_H_
#define _INCLUDE_GUIBNDCOM_API_H_

#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>

OSI_EXTERN_C_BEGIN
;
typedef enum
{
    LVPOCGUIIDTCOM_SIGNAL_START = (1 << 8) - 1,

    LVPOCGUIOEMCOM_SIGNAL_AP_POC_START,

    LVPOCGUIOEMCOM_SIGNAL_AP_POC_IND,
    LVPOCGUIOEMCOM_SIGNAL_AP_POC_REP,

    LVPOCGUIOEMCOM_SIGNAL_OPENPOC_IND,
    LVPOCGUIOEMCOM_SIGNAL_OPENPOC_REP,

    LVPOCGUIOEMCOM_SIGNAL_SETPOC_IND,
    LVPOCGUIOEMCOM_SIGNAL_SETPOC_REP,

    LVPOCGUIOEMCOM_SIGNAL_LOGIN_IND,
    LVPOCGUIOEMCOM_SIGNAL_LOGIN_REP,

    LVPOCGUIOEMCOM_SIGNAL_EXIT_IND,
    LVPOCGUIOEMCOM_SIGNAL_EXIT_REP,

    LVPOCGUIOEMCOM_SIGNAL_SPEAK_START_IND,
    LVPOCGUIOEMCOM_SIGNAL_SPEAK_START_REP,

    LVPOCGUIOEMCOM_SIGNAL_SPEAK_STOP_IND,
    LVPOCGUIOEMCOM_SIGNAL_SPEAK_STOP_REP,
    LVPOCGUIOEMCOM_SIGNAL_SPEAK_PLAY_START_TONE,
    LVPOCGUIOEMCOM_SIGNAL_SPEAK_PLAY_STOP_TONE,

    LVPOCGUIOEMCOM_SIGNAL_LISTEN_START_REP,
    LVPOCGUIOEMCOM_SIGNAL_LISTEN_STOP_REP,
    LVPOCGUIOEMCOM_SIGNAL_LISTEN_SPEAKER_REP,
    LVPOCGUIOEMCOM_SIGNAL_LISTEN_PLAY_START_TONE,
    LVPOCGUIOEMCOM_SIGNAL_LISTEN_PLAY_STOP_TONE,

    LVPOCGUIOEMCOM_SIGNAL_JOIN_GROUP_REP,
    LVPOCGUIOEMCOM_SIGNAL_GROUPLIST_DATA_REP,
    LVPOCGUIOEMCOM_SIGNAL_STOP_GROUP_REFR_REP,

    LVPOCGUIOEMCOM_SIGNAL_MEMBERLIST_INFO_IN,
    LVPOCGUIOEMCOM_SIGNAL_MEMBERLIST_INFO_REP,
    LVPOCGUIOEMCOM_SIGNAL_MEMBERLIST_DATA_REP,

    LVPOCGUIOEMCOM_SIGNAL_MEMBER_LIST_QUERY_IND,
    LVPOCGUIOEMCOM_SIGNAL_MEMBER_LIST_QUERY_REP,
    LVPOCGUIOEMCOM_SIGNAL_MEMBER_LIST_QUERY_UPDATE,
    LVPOCGUIOEMCOM_SIGNAL_REGISTER_GET_MEMBER_LIST_CB_IND,
    LVPOCGUIOEMCOM_SIGNAL_CANCEL_REGISTER_GET_MEMBER_LIST_CB_IND,

    LVPOCGUIOEMCOM_SIGNAL_GROUP_LIST_QUERY_IND,
    LVPOCGUIOEMCOM_SIGNAL_GROUP_LIST_QUERY_REP,
    LVPOCGUIOEMCOM_SIGNAL_GROUP_LIST_QUERY_UPDATE,
    LVPOCGUIOEMCOM_SIGNAL_REGISTER_GET_GROUP_LIST_CB_IND,
    LVPOCGUIOEMCOM_SIGNAL_CANCEL_REGISTER_GET_GROUP_LIST_CB_IND,

    LVPOCGUIOEMCOM_SIGNAL_BIUILD_TEMPGRP_IND,
    LVPOCGUIOEMCOM_SIGNAL_BIUILD_TEMPGRP_REP,
    LVPOCGUIOEMCOM_SIGNAL_BIUILD_TEMPGRP_GET_MEMBER_REP,
    LVPOCGUIOEMCOM_SIGNAL_BIUILD_TEMPGRP_EXIT_REP,
    LVPOCGUIOEMCOM_SIGNAL_REGISTER_BIUILD_TEMPGRP_CB_IND,
    LVPOCGUIOEMCOM_SIGNAL_CANCEL_REGISTER_BIUILD_TEMPGRP_CB_IND,

    LVPOCGUIOEMCOM_SIGNAL_SET_CURRENT_GROUP_IND,
    LVPOCGUIOEMCOM_SIGNAL_SET_CURRENT_GROUP_REP,
    LVPOCGUIOEMCOM_SIGNAL_REGISTER_SET_CURRENT_GROUP_CB_IND,
    LVPOCGUIOEMCOM_SIGNAL_CANCEL_REGISTER_SET_CURRENT_GROUP_CB_IND,

    LVPOCGUIOEMCOM_SIGNAL_REGISTER_MEMBER_STATUS_CB_REP,
    LVPOCGUIOEMCOM_SIGNAL_MEMBER_INFO_IND,

    LVPOCGUIOEMCOM_SIGNAL_SINGLE_CALL_STATUS_IND,
    LVPOCGUIOEMCOM_SIGNAL_SINGLE_CALL_STATUS_OK_REP,
    LVPOCGUIOEMCOM_SIGNAL_SINGLE_CALL_STATUS_EXIT_REP,

    LVPOCGUIOEMCOM_SIGNAL_MEMBER_GROUP_INFO_UPDATE,

    LVPOCGUIOEMCOM_SIGNAL_CALL_TALKING_ID_IND,

    LVPOCGUIOEMCOM_SIGNAL_EXIT_SINGLE_JOIN_CURRENT_GROUP,

    LVPOCGUIOEMCOM_SIGNAL_GET_MONITOR_GROUP_STATUS_IND,

    LVPOCGUIOEMCOM_SIGNAL_MONITOR_GROUP_IND,
    LVPOCGUIOEMCOM_SIGNAL_MONITOR_GROUP_REP,

    LVPOCGUIOEMCOM_SIGNAL_UNMONITOR_GROUP_IND,
    LVPOCGUIOEMCOM_SIGNAL_UNMONITOR_GROUP_REP,

    LVPOCGUIOEMCOM_SIGNAL_POWERON_CHECK_MONITOR_GROUP_REP,

    LVPOCGUIOEMCOM_SIGNAL_GPS_UPLOADING_IND,

    LVPOCGUIOEMCOM_SIGNAL_SPEAK_START_REP_RECORD_IND,

    LVPOCGUIOEMCOM_SIGNAL_SCREEN_ON_IND,
    LVPOCGUIOEMCOM_SIGNAL_SCREEN_OFF_IND,
    LVPOCGUIOEMCOM_SIGNAL_STOP_TIMEOUT_CHECK_ACK_IND,

    LVPOCGUIOEMCOM_SIGNAL_CALL_BRIGHT_SCREEN_ENTER,
    LVPOCGUIOEMCOM_SIGNAL_CALL_BRIGHT_SCREEN_EXIT,
    LVPOCGUIOEMCOM_SIGNAL_CALL_BRIGHT_SCREEN_BREAK,

    LVPOCGUIOEMCOM_SIGNAL_POWER_SAVE_OPEN_IND,
    LVPOCGUIOEMCOM_SIGNAL_POWER_SAVE_OPEN_REP,
    LVPOCGUIOEMCOM_SIGNAL_POWER_SAVE_CLOSE_IND,
    LVPOCGUIOEMCOM_SIGNAL_POWER_SAVE_CLOSE_REP,

    LVPOCGUIOEMCOM_SIGNAL_SOUND_QUALITY_4K_IND,
    LVPOCGUIOEMCOM_SIGNAL_SOUND_QUALITY_8K_IND,
    LVPOCGUIOEMCOM_SIGNAL_TONE_OPEN_IND,
    LVPOCGUIOEMCOM_SIGNAL_TONE_CLOSE_IND,

    LVPOCGUIOEMCOM_SIGNAL_USERNAME_UPDATE_IND,
    LVPOCGUIOEMCOM_SIGNAL_SET_SHUTDOWN_POC,
    LVPOCGUIOEMCOM_SIGNAL_CHECK_QUILITY_MODE_IND,
    LVPOCGUIOEMCOM_SIGNAL_VOICE_PLAY_START_IND,
    LVPOCGUIOEMCOM_SIGNAL_VOICE_PLAY_STOP_IND,

    LVPOCGUIOEMCOM_SIGNAL_CIT_ENTER_IND,//allowed of cit'view

    LVPOCGUIOEMCOM_SIGNAL_STOP_PLAYER_VOICE,
    LVPOCGUIOEMCOM_SIGNAL_SET_STOP_PLAYER_TTS_VOICE,
    LVPOCGUIOEMCOM_SIGNAL_SET_START_PLAYER_TTS_VOICE,

    LVPOCGUIOEMCOM_SIGNAL_DELAY_OPEN_PA_IND,
    LVPOCGUIOEMCOM_SIGNAL_DELAY_CLOSE_PA_IND,
    LVPOCGUIOEMCOM_SIGNAL_STOP_DELAY_CLOSE_PA_IND,

} LvPocGuiOemCom_SignalType_t;

typedef enum{

    LVPOCOEMCOM_SIGNAL_LOGIN_START = 0,

    LVPOCOEMCOM_SIGNAL_LOGIN_FAILED = 1 ,
    LVPOCOEMCOM_SIGNAL_LOGIN_SUCCESS = 2 ,
    LVPOCOEMCOM_SIGNAL_LOGIN_EXIT = 3 ,

    LVPOCOEMCOM_SIGNAL_LOGIN_END    ,
}LVPOCIDTCOM_LOGIN_STATUS_T;

typedef enum{

    LVPOCOEMCOM_SIGNAL_GROUP_START = 0,

    LVPOCOEMCOM_SIGNAL_GROUP_NONE = 1 ,
    LVPOCOEMCOM_SIGNAL_GROUP_JOIN = 2 ,
    LVPOCOEMCOM_SIGNAL_GROUP_EXIT = 3 ,

    LVPOCOEMCOM_SIGNAL_GROUP_END    ,
}LVPOCOEMCOM_GROUP_STATUS_T;

typedef enum{

    LVPOCOEMCOM_CALL_TYPE_START = 0,

    LVPOCOEMCOM_CALL_TYPE_SINGLE = 1 ,
    LVPOCOEMCOM_CALL_TYPE_GROUP = 2 ,

    LVPOCOEMCOM_CALL_TYPE_END    ,
}LVPOCOEMCOM_CALL_TYPE_T;

enum{

    LVPOCOEMCOM_CALL_DIR_TYPE_START = 0,

    LVPOCOEMCOM_CALL_DIR_TYPE_IND = 1 ,
    LVPOCOEMCOM_CALL_DIR_TYPE_REP = 2 ,
};

enum{
    LVPOCOEMCOM_CALL_DIR_TYPE_ENTER = 1 ,
    LVPOCOEMCOM_CALL_DIR_TYPE_SPEAK = 2 ,
    LVPOCOEMCOM_CALL_DIR_TYPE_LISTEN = 3 ,
};

enum{
    LVPOCOEMCOM_CALL_LASTSCR_STATE_START = 1 ,
    LVPOCOEMCOM_CALL_LASTSCR_STATE_OPEN  = 2 ,
    LVPOCOEMCOM_CALL_LASTSCR_STATE_CLOSE = 3 ,
};

typedef enum{

    LVPOCOEMCOM_TYPE_REPPONSE_SPEED_START = 0,

    LVPOCOEMCOM_TYPE_REPPONSE_SPEED_MEMBERLIST    = 50 ,
    LVPOCOEMCOM_TYPE_REPPONSE_SPEED_GROUPLIST     = 50 ,
    LVPOCOEMCOM_TYPE_REPPONSE_SPEED_MONITORGROUP  = 50 ,
    LVPOCOEMCOM_TYPE_REPPONSE_SPEED_NORMAL        = 100 ,
    LVPOCOEMCOM_TYPE_REPPONSE_SPEED_SLEEP         = 5000 ,

    LVPOCOEMCOM_TYPE_REPPONSE_SPEED_END    ,
}LVPOCOEMCOM_REPPONSE_SPEED_TYPE_T;

/**********************EXTERN**********************/

typedef struct _PocGuiOemUserAttr_t
{
    char  OemUserName[64];
    char  OemUserID[64];
    char  OemUserStatus[64];
    int   OemUserNumber;
}PocGuiOemUserAttr_t;

typedef struct _PocGuiOemGroupAttr_t
{
    char  OemGroupName[64];
    char  OemGroupID[32];
    int   OemGroupNumber;
}PocGuiOemGroupAttr_t;

typedef struct
{
    int opt;
    void *group_info;
    void (*cb)(lv_poc_group_oprator_type opt);
} LvPocGuiIdtCom_monitor_group_t;

void lvPocGuiOemCom_Init(void);

bool lvPocGuiOemCom_Msg(LvPocGuiOemCom_SignalType_t signal, void * ctx);

bool lvPocGuiOemCom_CriRe_Msg(LvPocGuiOemCom_SignalType_t signal, void * ctx);

bool lvPocGuiOemCom_MessageQueue(osiMessageQueue_t *mq, const void *msg);

int OEM_SendUart(char *uf,int len);

void OEM_TTS_Stop();

int OEM_TTS_Spk(char* atxt);

void lv_poc_oemdata_strtostrhex(char *pszDest, char *pbSrc, int nLen);

unsigned int lv_poc_persist_ssl_hashKeyConvert(char *pUserInput, wchar_t *pKeyArray);

void lv_poc_unicode_to_gb2312_convert(char *pUserInput, char *pUserOutput);

int unicode_to_utf(unsigned long unicode, unsigned char *utf);

int lv_poc_oem_unicode_to_utf8_convert(char *pUserInput, unsigned char *pUserOutput);

uint64_t lv_poc_oemdata_strtodec(char *data,uint32_t len);

uint64_t lv_poc_oemdata_hexstrtodec(char *s, uint32_t len);

void *lvPocGuiOemCom_get_oem_self_info(void);

void *lvPocGuiOemCom_get_current_group_info(void);

bool lvPocGuiOemCom_Request_Groupx_MemeberInfo(char *GroupID);

bool lvPocGuiOemCom_Request_Join_Groupx(char *GroupID);

bool lvPocGuiOemCom_modify_current_group_info(OemCGroup *CurrentGroup);

bool lvPocGuiOemCom_Request_Member_Call(char *UserID);

bool lvPocGuiOemCom_get_speak_status(void);

bool lvPocGuiOemCom_get_listen_status(void);

int lvPocGuiOemCom_get_login_status(void);

bool lvPocGuiOemCom_get_obtainning_state(void);

bool lvPocGuiOemCom_get_system_status(void);

void lvPocGuiOemCom_set_obtainning_state(bool status);

void lvPocGuiOemCom_set_response_speed(LVPOCOEMCOM_REPPONSE_SPEED_TYPE_T response_speed);

void lvPocGuiOemCom_stop_check_ack(void);

lv_poc_tmpgrp_t lvPocGuiOemCom_cit_status(lv_poc_tmpgrp_t status);

void lvPocGuiOemCom_set_launch_scrsta(bool status);

int lvPocGuiOemCom_tts_state(int status);

OSI_EXTERN_C_END

#endif